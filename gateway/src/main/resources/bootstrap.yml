server:
  address: www.nyist.xyz
#  ssl:
#    key-store: classpath:www.nyist.xyz.pfx
#    key-store-type: PKCS12
#    enabled: false
#    key-store-password: fc2998820...

spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: 'https://${server.address}:${server.port}/api-v1/author/getPublicKey'
  application:
    name: cim-getway
  cloud:
    consul:
      host: consul.nyist.com  #consul的IP（可以改成自己电脑ip）
      port: 8500       #consul启动端口默认8500
      discovery:
        service-name: ${spring.application.name}
        prefer-ip-address: true     #不写这个配置，在docker下的consul里面健康检查会失败
        healthCheckInterval: 5s     #健康检查频率
        port: ${server.port}        #注册服务所在端口
        health-check-url: http://${server.address}:${server.port}/actuator/health
    gateway:
      discovery:
        locator:
          enabled: true # 启用服务发现
          lower-case-service-id: true
      routes:
        - id: author
          uri: lb://cim-authorization
          predicates:
            - Path=/api-v1/author/**
          filters:
            - StripPrefix=2

        - id: file
          uri: lb:http://cim-file-server
          predicates:
            - Path=/api-v1/artifact/**
          filters:
            - StripPrefix=2

        - id: api
          uri: lb:http://cim-api
          predicates:
            - Path=/api-v1/**
          filters:
            - StripPrefix=1

        - id: socket
          uri: lb://cim-socket
          predicates:
            - Path=/socket.io/**
          filters:
            - StripPrefix=0


white-list:
  urls:
    - "/api-v1/author/oauth/token"
    - "/api-v1/author/getPublicKey"
    - "/api-v1/user/register"
    - "/api-v1/user/getCode"
    - "/api-v1/user/retrievePassword"
    - "/actuator/health"
    - "/socket.io"
    - "/api-v1/artifact/**"
